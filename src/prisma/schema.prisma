// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// add a test model
model Test {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  password  String
}

model Player {
  playerId       Int              @id @default(autoincrement())
  name           String
  money          Int
  inventoryItems InventoryItems[]
}

model Item {
  itemId         Int              @id @default(autoincrement())
  name           String
  description    String
  category       ItemCategory     @relation(fields: [categoryId], references: [categoryId])
  price          Int
  storeId        Int?
  inventoryItems InventoryItems[]
  filename       String
  categoryId     Int
  StoreItem      StoreItem[]
}

model Store {
  storeId Int         @id @default(autoincrement())
  name    String
  items   StoreItem[]
}

model StoreItem {
  storeItemId Int    @id @default(autoincrement())
  store       Store? @relation(fields: [storeId], references: [storeId])
  storeId     Int?
  item        Item?  @relation(fields: [itemId], references: [itemId])
  itemId      Int?
  price       Int
}

model InventoryItems {
  playerItemId   Int     @id @default(autoincrement())
  player         Player? @relation(fields: [playerId], references: [playerId])
  playerId Int?
  item           Item?   @relation(fields: [itemId], references: [itemId])
  itemId     Int?
}

model ItemCategory {
  categoryId Int            @id @default(autoincrement())
  name       String
  items      Item[]
  parent     ItemCategory?  @relation("SubCategory", fields: [parentId], references: [categoryId])
  parentId   Int?
  children   ItemCategory[] @relation("SubCategory")
}
